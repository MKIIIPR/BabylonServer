@using System.Net.Http.Json
@using AshesMapBib.Models
@using Services.AccountServices.ClientServices.Api

@inject IAPIHelper _api

<MudTable Style="flex:1;height:inherit" FixedHeader="true" Items="@OrderList" Dense="true" Hover="true" Bordered="false" Striped="true" Filter="new Func<MarketItem, bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">

    <HeaderContent>
        <MudTh>Order</MudTh>        
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>ServerId</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Order">@context.OrderType</MudTd>        
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Position">@context.RarityId</MudTd>
        <MudTd DataLabel="ServerId">@context.ServerId</MudTd>
    </RowTemplate>

</MudTable>



@code {

    private string searchString1 = "";
    private MarketItem selectedItem1 = null;
    private HashSet<MarketItem> selectedItems = new HashSet<MarketItem>();
    [Parameter]
    public List<MarketItem> OrderList { get; set; } = new();
    private IEnumerable<MarketItem> MarketItems = new List<MarketItem>();

    protected override async Task OnInitializedAsync()
    {
        // MarketItems = await _api.ApiClient.GetFromJsonAsync<List<MarketItem>>("/api/market/aocitem/Gear_Armor_Heavy_2ndSwordDivision_Feet");
    }

    private bool FilterFunc1(MarketItem MarketItem) => FilterFunc(MarketItem, searchString1);

    private bool FilterFunc(MarketItem MarketItem, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        
        if (MarketItem.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }
}