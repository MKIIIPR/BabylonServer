
@using FrontUI.AppStates
@using FrontUI.Components
@using FrontUI.FrontPages.Dialogs
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using MudBlazor
@using static MudBlazor.CategoryTypes
@inject IDialogService Dialog
 @inject AuthenticationStateProvider AuthenticationStateProvider
@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="true" Theme="_myDarkTheme" />

<MudPopoverProvider />
<MudSnackbarProvider />
<CascadingAuthenticationState>
    <CascadingAppStateProvider>
        <MudLayout>
            <MudAppBar>

                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggle" ov />
                <MudImage Src="_content/FrontUI/img/beeetv.png" Width="55" Height="55" Alt="Mony the dog" Elevation="25" Class="rounded-lg" Style="border-radius:30px!important" />
                BabylonMap 
                <MudSpacer  />

                <MudSpacer></MudSpacer>
                <AuthorizeView>
                    <Authorized>
                        
                            <p>Hallo, @context.User.Identity.Name!</p>
                        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Primary" aria-label="github" OnClick="UserSideBar" />
                        
                    </Authorized>
                    <NotAuthorized>
                        <p>Hallo, @context.User.Identity.Name!</p>
                        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Primary" aria-label="github" OnClick="RegisterInSideNav" />
                    </NotAuthorized>
                </AuthorizeView>

              
                <MudButton OnClick="@(() => OpenDialogAsync())" Color="Color.Tertiary">Disable backdrop dialog</MudButton>
            </MudAppBar>

            <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Never" Anchor="Anchor.End" Width="400px" Elevation="1" Variant="@DrawerVariant.Temporary">
                @switch (SideNavContent)
                {
                case "Register":
                        <FrontUI.FrontPages.AuthPages.UserSideBar />
                    break;
                case "user":
                        <FrontUI.FrontPages.AuthPages.UserSideBar />
                        break;
                case "menue":
                    
                    break;
                
                    
            }       
            </MudDrawer>
            <MudDrawer @bind-Open="@(_navOpend)" ClipMode="DrawerClipMode.Docked" Anchor="Anchor.Start" Width="200px" Elevation="1" Variant="@DrawerVariant.Responsive">
            <NavSideBar></NavSideBar>
            </MudDrawer>
            <MudMainContent>

                @ChildContent
            </MudMainContent>
            <div style="background-color:red;height:25px;width:100%">

            </div>
        </MudLayout>
    </CascadingAppStateProvider>
</CascadingAuthenticationState>
@code {
    private Task OpenDialogAsync()
    {
        return Dialog.ShowAsync<DialogTemplate>("Custom Options Dialog", new DialogOptions() { BackdropClick = false });
    }
    public bool _navOpend = true;
  
    
        public string User { get; set; } = string.Empty;
        protected override async Task OnInitializedAsync()
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity != null && user.Identity.IsAuthenticated)
            {
                Console.WriteLine("Benutzer ist authentifiziert.");
            }
            else
            {
                Console.WriteLine("Benutzer ist nicht authentifiziert.");
            }
        }
    
    [Parameter] public RenderFragment ChildContent { get; set; }
    private bool _drawerOpen = false;
    public string SideNavContent = "";
    public void RegisterInSideNav()
    {
        SideNavContent = "Register";
        DrawerToggle();
    }
        public void UserSideBar()
        {
    SideNavContent = "user";
    DrawerToggle();
        }
    private void DrawerToggle()
    {
        _navOpend = !_navOpend;
    }

    private MudTheme _myDarkTheme = new MudTheme()
        {
             PaletteDark = new PaletteDark()
            {
                Primary = "#1E88E5",
                Secondary = "#E91E63",
                Background = "#121212",
                Surface = "#1E1E1E"
            }
        };
}
